// <auto-generated />
using System;
using Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(QuoteContext))]
    [Migration("20240128010523_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuoteCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuoteCategoryId");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Gone with the Wind",
                            QuoteCategoryId = 1,
                            Text = "Frankly, my dear, I don't give a damn.",
                            Year = 1939
                        },
                        new
                        {
                            Id = 2,
                            Author = "Jerry Maguire",
                            QuoteCategoryId = 1,
                            Text = "You had mne at \"Hello\".",
                            Year = 1996
                        },
                        new
                        {
                            Id = 3,
                            Author = "The Shining",
                            QuoteCategoryId = 1,
                            Text = "Here's Johnny.",
                            Year = 1980
                        },
                        new
                        {
                            Id = 4,
                            Author = "Martin Luther King, Jr.",
                            QuoteCategoryId = 2,
                            Text = "Out of the mountain of despair, a stone of hope."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Carol Burnett",
                            QuoteCategoryId = 2,
                            Text = "When you have a dream, you've got to grab it and never let go."
                        },
                        new
                        {
                            Id = 6,
                            Author = "Michael Altshuler",
                            QuoteCategoryId = 2,
                            Text = "The bad news is time flies. The good news is you're the pilot."
                        },
                        new
                        {
                            Id = 7,
                            Author = "Sir Arthur Conan Doyle, The White Company",
                            QuoteCategoryId = 3,
                            Text = "You are my heart, my life, my one and only thought."
                        },
                        new
                        {
                            Id = 8,
                            Author = "Henry David Thoreau",
                            QuoteCategoryId = 3,
                            Text = "There is no remedy for love but to love more."
                        },
                        new
                        {
                            Id = 9,
                            Author = "Bertrand Russell, The Conquest of Happiness",
                            QuoteCategoryId = 3,
                            Text = "Of all forms of caution, caution in love is perhaps the most fatal to true happiness."
                        },
                        new
                        {
                            Id = 10,
                            Author = "Rose (Betty White), \"The Golden Girls\"",
                            QuoteCategoryId = 4,
                            Text = "My mother always used to say: The older you get,the better you get,unless you’re a banana."
                        },
                        new
                        {
                            Id = 11,
                            Author = "David Lettermn",
                            QuoteCategoryId = 4,
                            Text = "Halloween is the beginning of the holiday shopping season. That’s for women. The beginning of the holiday shopping season for men is Christmas Eve."
                        },
                        new
                        {
                            Id = 12,
                            Author = "Mark Twain",
                            QuoteCategoryId = 4,
                            Text = "Clothes make the man. Naked people have little or no influence in society."
                        });
                });

            modelBuilder.Entity("Data.Entities.QuoteCategory", b =>
                {
                    b.Property<int>("QuoteCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuoteCategoryId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuoteCategoryId");

                    b.ToTable("QuoteCategories");

                    b.HasData(
                        new
                        {
                            QuoteCategoryId = 1,
                            Category = "Movies"
                        },
                        new
                        {
                            QuoteCategoryId = 2,
                            Category = "Inspirational"
                        },
                        new
                        {
                            QuoteCategoryId = 3,
                            Category = "Love"
                        },
                        new
                        {
                            QuoteCategoryId = 4,
                            Category = "Humerous"
                        });
                });

            modelBuilder.Entity("Data.Entities.Quote", b =>
                {
                    b.HasOne("Data.Entities.QuoteCategory", "QuoteCategory")
                        .WithMany()
                        .HasForeignKey("QuoteCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuoteCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
